STARTING LOCAL DYNAMODB
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb -inMemory

CREATE TABLE
aws dynamodb create-table --endpoint-url http://localhost:8000  --table-name AnimalGenieUserSession --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1

GET ITEM
aws dynamodb get-item  --endpoint-url http://localhost:8000  --table-name AnimalGenieUserSession --key '{"id":{"S":"1486656220806"}}'

ACCESS KEY
When using DynamoDB in a Lambda, "accessKeyId" and "secretAccessKey" are not required (you can invalid key exception if they are provided). It
is because Lambda has its own IAM role and that role determines if the Lambda can access DynamoDB or not.

UPLOADING CODE TO LAMBDA
aws lambda update-function-code --zip-file fileb://./dist/lambda.zip --function-name $LAMBDA_ARN