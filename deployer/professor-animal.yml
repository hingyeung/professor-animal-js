AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Backend for Animal Academy Google Action
Parameters:
  artefactBucket:
    Type: String
  dataBucket:
    Type: String
  gitBranch:
    Type: String
Resources:
  UserSessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        AttributeName: expirationTime
        Enabled: true
  ProfessorAnimalLambdaLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ '/', [ "/aws/lambda", !Ref ProfessorAnimalLambdaFunction ] ]
      RetentionInDays: 7
  ProfessorAnimalLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.myHandler
      Runtime: nodejs8.10
      # https://github.com/awslabs/serverless-application-model/issues/61
      # https://github.com/awslabs/serverless-application-model/blob/master/HOWTO.md#using-intrinsic-functions
      #CodeUri: !Join [ 's3://', !Ref artefactBucket, '/professor-animal/src/', !Ref keyToBuildArtefact ]
      CodeUri: ../dist
      MemorySize: 128
      Timeout: 10
      # https://bit.ly/2O3CUXl
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref UserSessionTable
        - SNSPublishMessagePolicy:
            TopicName: prof_animal_lost_game
        - S3ReadPolicy:
            BucketName: !Ref dataBucket
      Events:
        ApiAiWebHook:
          Type: Api
          Properties:
            Path: /apiaiwebhook
            Method: post
            RestApiId: !Ref ProfessorAnimalApi
      Environment:
        Variables:
          USER_SESSION_TABLE: !Ref UserSessionTable
          NODE_ENV: 'production'
          NOTIFICATION_TOPIC_ARN: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:prof_animal_lost_game"
          DATA_S3_BUCKET: !Ref dataBucket
          ANIMAL_DEFINITION_S3_KEY: professor-animal/data/animals.json

  ProfessorAnimalApi:
    Type: AWS::Serverless::Api
    Properties:
      # can't use DefinitionUri
      # https://github.com/awslabs/serverless-application-model/issues/305
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: !Join [ '', ['s3://', !Ref artefactBucket, '/professor-animal/deployer/', !Ref gitBranch, '/swagger.yml'] ]
      StageName: "dev"

Outputs:
  ProfessorAnimalApiEndpoint:
    Description: "API Gateway endpoint URL for dev stage for ProfessorAnimalLambdaFunction function"
    Value: !Sub "https://${ProfessorAnimalApi}.execute-api.${AWS::Region}.amazonaws.com/dev/apiaiwebhook/"
  ProfessorAnimalApiId:
    Description: "API ID for ProfessorAnimalLambdaFunction function"
    Value: !Ref ProfessorAnimalApi

# https://github.com/awslabs/serverless-application-model/tree/master/examples/2016-10-31/api_swagger_cors
